<img src="http://land-boards.com/blwiki/images/8/8f/RETRO-EP4CE15-REV4-BLACK-P1464-720PX.jpg"></img>

== M68000 VGA PS2 Internal RAM/ROM - Working ==

* RETRO-EP4CE15 Card
* M68000 CPU
* Monitor ROM
* Internal SRAM
* Video Display Unit (VDU)
* 6850 ACIA UART
* SD Card
* GPIO

=== RETRO-EP4CE15 Card ===

* [http://land-boards.com/blwiki/index.php?title=RETRO-EP4CE15 RETRO-EP4CE15 Card]
** [http://land-boards.com/blwiki/index.php?title=QM_Tech_Cyclone_V_FPGA_Board QMTECH Cyclone V FPGA Card]

=== M68000 CPU ===

* [https://github.com/douggilliland/MultiComp/tree/master/MultiComp%20(VHDL%20Template)/Components/CPU/M68000/TG68K_2013 TG68K_2013 VHDL Core]
* Runs at 25 MHz for internal accesses (ROM, SRAM, peripherals)
* Runs at 16.7 MHz for external SRAM

=== Monitor ROM ===

* [https://github.com/douggilliland/Retro-Computers/tree/7ce0358bcddc7edb204a87fba47e80a591d9d570/68000/ReferenceDesigns/TS2_JeffTranter/monitor/TSBUG2 TSBUG2 Monitor]
** 2KB organized as 1Kx16
** Zero Wait-states
* [https://github.com/douggilliland/Retro-Computers/tree/7ce0358bcddc7edb204a87fba47e80a591d9d570/68000/ReferenceDesigns/TS2_JeffTranter/tutor TUTOR Monitor]
** 16KB organized as 8Kx16
** Zero Wait-states

=== Internal SRAM ===

* 32KB + 16KB + 64KB + 32KB = 144KB SRAM

** Organized as 16Kx16
** Zero Wait-States

=== Video Display Unit (VDU) ===

* Based on Grant Searle's ANSI terminal
* Emulates 6850 ACIA (UART) interface
* VGA video
** 80x25 characters
** 640x480 resolution
** 2/2/2 bits RGB (64-colors)
* PS/2 keyboard

=== 6850 ACIA UART ===

* [https://github.com/nealcrook/multicomp6809/wiki/VDU-Modifications Neal Crook's modifications] to Grant Searle's 6850 VHDL code

=== SD Card ===

* SD/SDHC support

=== GPIO ===

* 19 bits of GPIO

== Memory Map ==
* 0x000000-0x007FFF - Internal SRAM (32KB)
* 0x008000-0x00BFFF - ROM Monitor (16KB)
* 0x00C000-0x00FFFF - Internal SRAM (16KB)
* 0x010041,0x010043 - ACIA
** ACIASTAT	= 0x010041
** ACIADATA	= 0x010043
* 0x010040,0x010042 - VDU
** VDUSTAT	= 0x010041
** VDUDATA	= 0x010043
* 0x010050-0x010058F - SD Card
** 0x010051 - SDDATA		read/write data
** 0x010053 - SDSTATUS	read
** 0x010053 - SDCONTROL	write
** 0x010055 - SDLBA0		write-only
** 0x010057 - SDLBA1		write-only
** 0x010059 - SDLBA2		write-only (only bits 6:0 are valid)
* 0x010061,0x010063 - GPIO
** 0x010061 - Address register
*** Address register value
**** 0 DAT0 bits [2:0]
**** 1 DDR0 bits [2:0]
**** 2 DAT2 bits [7:0]
**** 3 DDR2 bits [7:0]
**** 4 DAT3 bits [7:0]
**** 5 DDR3 bits [7:0]
*** 0x010063 - Data register
* 0x200000-0x217FFF - Internal SRAM (96KB)
* 0x300000-0x3FFFFF - External SRAM (1MB byte addressable)

== Reference Designs ==

* [https://jefftranter.blogspot.com/2016/12/building-68000-single-board-computer.html Jeff Tranter's TS2 build]
** Based on book [https://www.amazon.com/Microprocessor-Systems-Design-Hardware-Interfacing/dp/0534948227/ref=sr_1_2?crid=21I1LHECUP26L&dchild=1&keywords=alan+clements&qid=1593949123&sprefix=alan+clemens%2Caps%2C167&sr=8-2 Microprocessor Systems Design: 68000 Family Hardware, Software, and Interfacing]
*** pp 880-897 has the TS2 design that Jeff used as his source material
* [http://www.easy68k.com/paulrsm/mecb/mecb.htm Motorola MC68000 Educational Computer Board (MEX68KECB)]
** TS2 compatible memory map
* [https://www.bigmessowires.com/68-katy/ 68 Katy]

== Software Tools ==

* [https://darkdust.net/writings/megadrive/crosscompiler Installing binutils and GCC as cross-compiler for the Motorolla 68000]
* [http://srecord.sourceforge.net/ S-Record 1.64 Tools]

== TSBUG2 Monitor ROM ==

* [https://github.com/douggilliland/Retro-Computers/blob/7ce0358bcddc7edb204a87fba47e80a591d9d570/68000/ReferenceDesigns/TS2_JeffTranter/monitor/TSBUG2/monitor.s TSBUG2 Source File]
* [https://github.com/douggilliland/Retro-Computers/blob/7ce0358bcddc7edb204a87fba47e80a591d9d570/68000/ReferenceDesigns/TS2_JeffTranter/monitor/TSBUG2/monitor.lst TSBUG2 List File]
* [https://github.com/douggilliland/Retro-Computers/blob/7ce0358bcddc7edb204a87fba47e80a591d9d570/68000/ReferenceDesigns/TS2_JeffTranter/monitor/TSBUG2/commands.txt TSBUG2 Command List]

== TUTOR Monitor ROM ==

* [https://github.com/douggilliland/Retro-Computers/tree/7ce0358bcddc7edb204a87fba47e80a591d9d570/68000/ReferenceDesigns/TS2_JeffTranter/tutor TUTOR Monitor]

=== Shift ROM addresses for Quartus FPGA Tool  ===

* Assembler output ([https://github.com/douggilliland/Retro-Computers/blob/7ce0358bcddc7edb204a87fba47e80a591d9d570/68000/ReferenceDesigns/TS2_JeffTranter/monitor/TSBUG2/monitor.hex monitor.hex])
<pre>
:2080000000000800000080084DF80C0042AE004A422E0048422E00496136610005D861009E
:20802000044E49FA09D06164207C0000C00020100C80524F4D3266044EA800084E714E71EF
</pre>
* Addresses start at 0x8000 (AAAA below):
<pre>
:2080000000000800000080084DF80C0042AE004A422E0048422E00496136610005D861009E
__AAAA_____________________________________________________________________
</pre>
==== Shift the records down ====
* First convert to S-Records using [http://srecord.sourceforge.net srec_cat] - [https://github.com/douggilliland/Retro-Computers/tree/master/PC%20Tools/srecord My copy of s-record tools]
<pre>
[PATH_TO_SRECORD_UTILITIES]\srec_cat monitor.hex -Intel -o monitor.srec -Motorola
</pre>
* S-Record output ([https://github.com/douggilliland/Retro-Computers/blob/master/68000/TS2/monitor/TSBUG2/monitor.srec monitor.srec])
<pre>
S123800000000800000080084DF80C0042AE004A422E0048422E00496136610005D861009A
S1238020044E49FA09D06164207C0000C00020100C80524F4D3266044EA800084E714E71EB
</pre>
* Then shift and save as an Altera MIF file
<pre>
[PATH_TO_SRECORD_UTILITIES]\srec_cat monitor.srec -offset - -minimum-addr monitor.srec -o monitor.mif -Memory_Initialization_File 16
</pre>
* Result is ([https://github.com/douggilliland/Retro-Computers/blob/master/68000/TS2/monitor/TSBUG2/monitor.mif monitor.mif])
<pre>
-- FFFF8000: http://srecord.sourceforge.net/
--
-- Generated automatically by srec_cat -o --mif
--
DEPTH = 8192;
WIDTH = 16;
ADDRESS_RADIX = HEX;
DATA_RADIX = HEX;
CONTENT BEGIN
0000: 0000 0800 0000 8008 4DF8 0C00 42AE 004A 422E 0048 422E 0049 6136 6100;
000E: 05D8 6100 044E 49FA 09D0 6164 207C 0000 C000 2010 0C80 524F 4D32 6604;
001C: 4EA8 0008 4E71 4E71 4287 6128 614C 6100 0080 6100 00BE 60F0 41F9 0001;
...
</pre>
* Load into Quartus in the Monitor_68K_ROM using Megawizard

== Running TS2BUG Monitor ==

* [https://github.com/douggilliland/Retro-Computers/tree/7ce0358bcddc7edb204a87fba47e80a591d9d570/68000/ReferenceDesigns/TS2_JeffTranter/monitor/TSBUG2 Code is here]
* [https://github.com/douggilliland/Retro-Computers/blob/7ce0358bcddc7edb204a87fba47e80a591d9d570/68000/ReferenceDesigns/TS2_JeffTranter/monitor/TSBUG2/monitor.mif MIF file] is loaded to the ROM
* Works!!!

== Running TUTOR Monitor ==

* [https://github.com/douggilliland/Retro-Computers/tree/7ce0358bcddc7edb204a87fba47e80a591d9d570/68000/ReferenceDesigns/TS2_JeffTranter/tutor Code is here]
* [https://github.com/douggilliland/Retro-Computers/blob/7ce0358bcddc7edb204a87fba47e80a591d9d570/68000/ReferenceDesigns/TS2_JeffTranter/tutor/tutor13.hex  HEX file] is loaded to the ROM
* Works!!!

=== Procedure for downloading code under TUTOR ===

* Code needs to be compiled to S Records
* Run puTTY on the Serial port
** puTTY conflicts with the USB Blaster
*** puTTY has to be shut down if down if the USB Blaster is used
** puTTY should be set to no add LF or CR
** Assuming the file already has CR LF on each line
** Can check by puTTY settings, Terminal Implicit LF or CR turned off
* Open the download file in a text editor
** I like notepad++
** Make sure the last line in the file to download is
*** S9030000FC
*** If it's not, add the S9 line with a CR at the end of the line
** Select all, copy to copy-paste buffer (CTRL-C)
* Type LO2 on the VDU keyboard
* On the Serial port, insert the text with CTRL-V
* After the download, TUTOR will return to the prompt or timeout if there's no S9 record
* Ready to run the program
** GO addr
*** addr is the start address

== Running Tiny BASIC ==

* [https://github.com/douggilliland/Retro-Computers/tree/7ce0358bcddc7edb204a87fba47e80a591d9d570/68000/ReferenceDesigns/TS2_JeffTranter/drdobbs/tinybasic Code is here]
* Works!!!

== Running Enhanced BASIC ==

* [https://github.com/douggilliland/Retro-Computers/tree/7ce0358bcddc7edb204a87fba47e80a591d9d570/68000/ReferenceDesigns/TS2_JeffTranter/ehbasic Code is here]
* [https://github.com/douggilliland/Retro-Computers/blob/7ce0358bcddc7edb204a87fba47e80a591d9d570/68000/ReferenceDesigns/TS2_JeffTranter/ehbasic/basic68k.run S-Record file is here]
* Type GO C000 to run Enhanced BASIC
* Works!!!

== Running demo-c Compiled with GCC Toolchain ==

* [https://github.com/douggilliland/Linux-68k/tree/master/TS2/c_example Code is here]
* [https://github.com/douggilliland/Linux-68k/blob/master/TS2/c_example/demo.run S-Record file is here]
* Works!!!

== Running fig-FORTH ===

* [https://github.com/douggilliland/Linux-68k/tree/master/TS2/figforth fig-FORTH V1.0]

== RAM Test ==

* [https://github.com/douggilliland/Linux-68k/tree/master/TS2/ExtRAMTest Code is here]
* [https://github.com/douggilliland/Linux-68k/blob/master/TS2/ExtRAMTest/ExtRAMTest.rec S-Record file is here]
